{
  "openapi": "3.0.1",
  "info": {
    "title": "kenzie-kars-api",
    "description": "The Kenzie Kars API is the backend for the Kenzie Kars application. It has been developed using Node.js, Express, TypeORM, and PostgreSQL. This API provides a set of endpoints that allow you to perform various operations related to the Kenzie Kars application.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "Development environment"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create user",
        "description": "This route is responsible for creating a new user. The fields \"name\", \"email\", \"password\", \"cpf\", \"phone\", \"birthdate\", and \"address\" are required, while the \"description\" and \"isSeller\" fields are optional. Any additional fields sent will be ignored. Creating a user with an existing email is not possible. The password must contain a minimum of 6 characters, including at least one letter and one digit. The \"address\" field should include the following properties: \"cep\", \"state\", \"city\", \"street\", \"number\", while the \"complement\" field is optional.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_create"
              },
              "example": {
                "name": "João da Silva",
                "email": "joao.silva@example.com",
                "password": "12345a",
                "cpf": "12345678909",
                "phone": "51987654321",
                "birthdate": "1990-05-15",
                "description": "Vendedor de carros com 10 anos de experiência.",
                "isSeller": true,
                "address": {
                  "cep": "90050200",
                  "state": "RS",
                  "city": "Porto Alegre",
                  "street": "Rua dos Andradas",
                  "number": "1234"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK - User creation successfully completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_return_with_address"
                },
                "example": {
                  "name": "João da Silva",
                  "email": "joao.silva@example.com",
                  "cpf": "12345678909",
                  "phone": "51987654321",
                  "birthdate": "1990-05-15",
                  "description": "Vendedor de carros com 10 anos de experiência.",
                  "isSeller": true,
                  "address": {
                    "cep": "90050200",
                    "state": "RS",
                    "city": "Porto Alegre",
                    "street": "Rua dos Andradas",
                    "number": "1234",
                    "complement": null,
                    "id": "d532551c-3aca-450a-8197-6e9d10e83aa8",
                    "createdAt": "2024-08-29T14:36:10.349Z",
                    "updatedAt": "2024-08-29T14:36:10.349Z"
                  },
                  "id": "b497b8d3-6c98-430e-b671-64ea7f2b2484",
                  "createdAt": "2024-08-29T14:36:10.374Z",
                  "updatedAt": "2024-08-29T14:36:10.374Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some required fields were not sent or are in an invalid format. Please ensure all mandatory fields are provided correctly.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_keys_required": {
                    "value": {
                      "message": {
                        "password": ["Required"],
                        "name": ["Required"],
                        "email": ["Required"],
                        "cpf": ["Required"],
                        "phone": ["Required"],
                        "birthdate": ["Invalid date"],
                        "address": ["Required"]
                      }
                    }
                  },
                  "bad_request_invalid_email": {
                    "value": {
                      "message": {
                        "email": ["Invalid email"]
                      }
                    }
                  },
                  "bad_request_invalid_password": {
                    "value": {
                      "message": {
                        "password": [
                          "Password must have at least 6 characters",
                          "Password must contain at least one letter and one number"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Attempt to create a user with an email that is already registered",
            "content": {
              "application/json": {
                "examples": {
                  "email_already_exists": {
                    "value": {
                      "message": "Email already exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Retrieve user data",
        "description": "This route is responsible for retrieving a user's profile based on their token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_return_with_address"
                },
                "example": {
                  "name": "Eduardo Schwert",
                  "email": "eduardoschwert@yahoo.com.br",
                  "cpf": "11111111111",
                  "phone": "51992904748",
                  "birthdate": "1996-08-26",
                  "description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled ",
                  "isSeller": true,
                  "address": {
                    "cep": "12345678",
                    "state": "NY",
                    "city": "New York",
                    "street": "Fith avenue",
                    "number": "123",
                    "complement": null,
                    "id": "2c09d072-97a3-4083-a6e1-8d3ba4ddf379",
                    "createdAt": "2023-09-10T20:35:35.404Z",
                    "updatedAt": "2023-09-10T20:35:35.447Z"
                  },
                  "id": "a66fa037-250e-4c0a-847c-7c94ca3bf63f",
                  "createdAt": "2023-09-10T20:35:35.447Z",
                  "updatedAt": "2023-09-10T20:35:35.447Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No authorization token provided, the provided token has expired, or the token is invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_bearer_token": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "jwt_expired": {
                    "value": {
                      "message": "jwt expired"
                    }
                  },
                  "invalid_token": {
                    "value": {
                      "message": "JWT Invalid"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Update user data",
        "description": "This route is responsible for updating a user's data based on their token. The fields \"name\", \"email\", \"cpf\", \"phone\", and \"birthdate\" are required, while the \"description\" field is optional. Any additional fields sent will be ignored. Updating a user with an existing email is not possible.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_update"
              },
              "example": {
                "name": "João da Silva Atualizado",
                "email": "joao.silva@example.com",
                "cpf": "12345678909",
                "phone": "51987654321",
                "birthdate": "1990-05-15",
                "description": "Vendedor de carros com 10 anos de experiência."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_return"
                },
                "example": {
                  "name": "João da Silva Atualizado",
                  "email": "joao.silva@example.com",
                  "cpf": "12345678909",
                  "phone": "51987654321",
                  "birthdate": "1990-05-15",
                  "description": "Vendedor de carros com 10 anos de experiência.",
                  "isSeller": true,
                  "id": "b497b8d3-6c98-430e-b671-64ea7f2b2484",
                  "createdAt": "2024-08-29T14:36:10.374Z",
                  "updatedAt": "2024-08-29T14:37:52.189Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No authorization token provided, the provided token has expired, or the token is invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_bearer_token": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "jwt_expired": {
                    "value": {
                      "message": "jwt expired"
                    }
                  },
                  "invalid_token": {
                    "value": {
                      "message": "JWT Invalid"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Attempt to update a user with an email that is already registered",
            "content": {
              "application/json": {
                "examples": {
                  "email_already_exists": {
                    "value": {
                      "message": "Email already exists"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some fields are in an invalid format. Please ensure that all fields are provided correctly.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_keys_required": {
                    "value": {
                      "message": {
                        "name": ["Required"],
                        "email": ["Required"],
                        "cpf": ["Required"],
                        "phone": ["Required"],
                        "birthdate": ["Invalid date"]
                      }
                    }
                  },
                  "bad_request_invalid_email": {
                    "value": {
                      "message": {
                        "email": ["Invalid email"]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user data",
        "description": "This route is responsible for deleting a user based on their token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - No authorization token provided, the provided token has expired, or the token is invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_bearer_token": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "jwt_expired": {
                    "value": {
                      "message": "jwt expired"
                    }
                  },
                  "invalid_token": {
                    "value": {
                      "message": "JWT Invalid"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/users/address": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user address data",
        "description": "This route is responsible for updating a user's address data based on their token. The fields \"cep\", \"state\", \"city\", \"street\", and \"number\" are required, while the \"complement\" field is optional. Any additional fields sent will be ignored.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_update_address"
              },
              "example": {
                "cep": "90050300",
                "state": "RS",
                "city": "Porto Alegre",
                "street": "Rua 4",
                "number": "2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_return_address"
                },
                "example": {
                  "cep": "90050300",
                  "state": "RS",
                  "city": "Porto Alegre",
                  "street": "Rua 4",
                  "number": "2",
                  "complement": null,
                  "id": "d532551c-3aca-450a-8197-6e9d10e83aa8",
                  "createdAt": "2024-08-29T14:36:10.349Z",
                  "updatedAt": "2024-08-29T14:38:48.455Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No authorization token provided, the provided token has expired, or the token is invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_bearer_token": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "jwt_expired": {
                    "value": {
                      "message": "jwt expired"
                    }
                  },
                  "invalid_token": {
                    "value": {
                      "message": "JWT Invalid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some fields are in an invalid format. Please ensure that all fields are provided correctly.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_keys_required": {
                    "value": {
                      "message": {
                        "cep": ["Required"],
                        "state": ["Required"],
                        "city": ["Required"],
                        "street": ["Required"],
                        "number": ["Required"]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/users/password": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user password",
        "description": "This route allows a user to update their password. The fields \"password\" and \"newPassword\" are mandatory. Any additional fields sent will be ignored. The password must contain a minimum of 6 characters, including at least one letter and one digit.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "newPassword": {
                    "type": "string",
                    "maxLength": 100
                  }
                }
              },
              "example": {
                "password": "12345a",
                "newPassword": "12345b"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "message": "Password change with success"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No authorization token was provided, the token has expired, is invalid, or the password is incorrect.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_bearer_token": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "jwt_expired": {
                    "value": {
                      "message": "jwt expired"
                    }
                  },
                  "invalid_token": {
                    "value": {
                      "message": "JWT Invalid"
                    }
                  },
                  "invalid_password": {
                    "value": {
                      "message": "Invalid credentials"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some required fields were not sent or are in an invalid format. Please ensure all mandatory fields are provided correctly.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_keys_required": {
                    "value": {
                      "message": {
                        "password": ["Required"]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/users/resetPassword": {
      "post": {
        "tags": ["Users"],
        "summary": "Send Email Recover Password",
        "description": "This route sends an email with a link containing a 10-minute expiration token for password recovery. The \"email\" field is required.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": 100
                  }
                }
              },
              "example": {
                "email": "eduardoschwert@yahoo.com.br"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "message": "Link sent to email"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified user email does not exist.",
            "content": {
              "application/json": {
                "examples": {
                  "user_not_found": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some required fields were not sent or are in an invalid format. Please ensure all mandatory fields are provided correctly.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_keys_required": {
                    "value": {
                      "message": {
                        "email": ["Required"]
                      }
                    }
                  },
                  "bad_request_invalid_email": {
                    "value": {
                      "message": {
                        "email": ["Invalid email"]
                      }
                    }
                  },
                  "bad_request_invalid_email_not_exist": {
                    "value": {
                      "message": "Error sending email, please check your email and try again"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/users/resetPassword/{token}": {
      "post": {
        "tags": ["Users"],
        "summary": "Recover Password",
        "description": "This route is responsible for recovering a user's password. The \"password\" field is required. It also verifies if the token is valid and has not expired.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token of the user",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "maxLength": 100
                  }
                }
              },
              "example": {
                "password": "novasenha1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "message": "Password change with success"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The provided token does not correspond to any user.",
            "content": {
              "application/json": {
                "examples": {
                  "user_not_found": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some required fields were not sent or are in an invalid format. Please ensure all mandatory fields are provided correctly.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_invalid_password": {
                    "value": {
                      "message": {
                        "password": [
                          "Password must have at least 6 characters",
                          "Password must contain at least one letter and one number"
                        ]
                      }
                    }
                  },
                  "invalid_or_expired_token": {
                    "value": {
                      "message": "Invalid or expired token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/vehicles": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Retrieve vehicles",
        "description": "This route is responsible for retrieving all vehicles.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1,
              "maximum": 30
            }
          },
          {
            "name": "brand",
            "in": "query",
            "description": "Filter by vehicle brand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Filter by vehicle model",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isGoodBuy",
            "in": "query",
            "description": "Filters vehicles priced 5% below the Fipe value",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "color",
            "in": "query",
            "description": "Filter by vehicle color",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minYear",
            "in": "query",
            "description": "Filter by vehicle minYear",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxYear",
            "in": "query",
            "description": "Filter by vehicle maxYear",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fuel",
            "in": "query",
            "description": "Filter by vehicle fuel",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 3
            }
          },
          {
            "name": "minMileage",
            "in": "query",
            "description": "Filter by vehicle minMileage",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "maxMileage",
            "in": "query",
            "description": "Filter by vehicle maxMileage",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "minPrice",
            "in": "query",
            "description": "Filter by vehicle minPrice",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "maxPrice",
            "in": "query",
            "description": "Filter by vehicle maxPrice",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vehicle_return_pagination_with_user"
                },
                "example": {
                  "count": 2,
                  "totalPages": 1,
                  "previousPage": null,
                  "nextPage": null,
                  "data": [
                    {
                      "brand": "chevrolet",
                      "model": "bolt ev premier 203cv (elétrico)",
                      "year": "2022",
                      "fuel": 3,
                      "mileage": 400,
                      "color": "white",
                      "price": 300000,
                      "description": "carro",
                      "coverImage": "imagem cover",
                      "id": "2f7785ec-76c3-483e-9876-eb7de227527f",
                      "fipePrice": 282045,
                      "isGoodBuy": false,
                      "isActive": true,
                      "createdAt": "2023-09-11T18:46:53.232Z",
                      "updatedAt": "2023-09-11T18:46:53.232Z",
                      "user": {
                        "name": "Eduardo Atualizado",
                        "description": "Lorem ipsum",
                        "id": "a66fa037-250e-4c0a-847c-7c94ca3bf63f",
                        "createdAt": "2023-09-10T20:35:35.447Z",
                        "updatedAt": "2023-09-10T20:43:26.979Z"
                      }
                    },
                    {
                      "brand": "chevrolet",
                      "model": "bolt ev premier 203cv (elétrico)",
                      "year": "2022",
                      "fuel": 3,
                      "mileage": 400,
                      "color": "white",
                      "price": 300000,
                      "description": "carro",
                      "coverImage": "imagem cover",
                      "id": "11ec0832-92ca-4b9a-81df-d7f19b7997fa",
                      "fipePrice": 282045,
                      "isGoodBuy": false,
                      "isActive": true,
                      "createdAt": "2023-09-11T19:00:37.328Z",
                      "updatedAt": "2023-09-11T19:00:37.328Z",
                      "user": {
                        "name": "Eduardo Atualizado",
                        "description": "Lorem ipsum",
                        "id": "a66fa037-250e-4c0a-847c-7c94ca3bf63f",
                        "createdAt": "2023-09-10T20:35:35.447Z",
                        "updatedAt": "2023-09-10T20:43:26.979Z"
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/seller/{userId}": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Retrieve user vehicles",
        "description": "This route is responsible for retrieving vehicles belonging to a specific user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1,
              "maximum": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vehicle_return_pagination_with_one_user"
                },
                "example": {
                  "count": 2,
                  "totalPages": 1,
                  "previousPage": null,
                  "nextPage": null,
                  "data": {
                    "user": {
                      "name": "Eduardo Atualizado",
                      "description": "Lorem ipsum",
                      "id": "a66fa037-250e-4c0a-847c-7c94ca3bf63f",
                      "createdAt": "2023-09-10T20:35:35.447Z",
                      "updatedAt": "2023-09-10T20:43:26.979Z"
                    },
                    "vehicles": [
                      {
                        "brand": "chevrolet",
                        "model": "bolt ev premier 203cv (elétrico)",
                        "year": "2022",
                        "fuel": 3,
                        "mileage": 400,
                        "color": "white",
                        "price": 300000,
                        "description": "carro",
                        "coverImage": "imagem cover",
                        "id": "2f7785ec-76c3-483e-9876-eb7de227527f",
                        "fipePrice": 282045,
                        "isGoodBuy": false,
                        "isActive": true,
                        "createdAt": "2023-09-11T18:46:53.232Z",
                        "updatedAt": "2023-09-11T18:46:53.232Z"
                      },
                      {
                        "brand": "chevrolet",
                        "model": "bolt ev premier 203cv (elétrico)",
                        "year": "2022",
                        "fuel": 3,
                        "mileage": 400,
                        "color": "white",
                        "price": 300000,
                        "description": "carro",
                        "coverImage": "imagem cover",
                        "id": "11ec0832-92ca-4b9a-81df-d7f19b7997fa",
                        "fipePrice": 282045,
                        "isGoodBuy": false,
                        "isActive": true,
                        "createdAt": "2023-09-11T19:00:37.328Z",
                        "updatedAt": "2023-09-11T19:00:37.328Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified seller ID does not exist.",
            "content": {
              "application/json": {
                "examples": {
                  "seller_not_found": {
                    "value": {
                      "message": "Seller not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid UUID",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid UUID"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vehicleId}": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Retrieve vehicle",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "This route retrieves an active vehicle. If the user is authenticated with a valid token, the user's phone number is included in the response; otherwise, the phone number is omitted.",
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "description": "ID of the vehicle",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vehicle_return_with_user_and_images_and_comments"
                },
                "example": {
                  "brand": "chevrolet",
                  "model": "bolt ev premier 203cv (elétrico)",
                  "year": "2022",
                  "fuel": 3,
                  "mileage": 4000,
                  "color": "white",
                  "price": 450000,
                  "description": "carro",
                  "coverImage": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQz81_oVRfjvkehB3OjCdMXyFxq3_2nAS3VEA&s",
                  "id": "9e442de1-8d4a-4857-a443-e65b64c2c4cb",
                  "fipePrice": 282045,
                  "isGoodBuy": false,
                  "isActive": true,
                  "createdAt": "2024-08-30T14:27:46.446Z",
                  "updatedAt": "2024-08-30T14:27:46.446Z",
                  "user": {
                    "name": "João da Silva",
                    "description": "Vendedor de carros com 10 anos de experiência.",
                    "id": "fb36ba2c-26a6-4be2-a7d5-fab5db65fbfc",
                    "createdAt": "2024-08-30T14:27:30.479Z",
                    "updatedAt": "2024-08-30T14:27:30.479Z"
                  },
                  "images": [
                    {
                      "id": "0cb7fb46-249c-4498-a563-17f1f54920a3",
                      "imageNumber": 1,
                      "imageUrl": "https://cdn.motor1.com/images/mgl/Vmbmy/s1/chevrolet-bolt-ev-2020.jpg",
                      "createdAt": "2024-08-30T14:27:46.463Z"
                    },
                    {
                      "id": "ef43bbac-9a1d-41cc-b804-379002bd2092",
                      "imageNumber": 2,
                      "imageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTGjLaz4E3T8NpyY37jo1ah4L-ymTyy7ENsMQ&s",
                      "createdAt": "2024-08-30T14:27:46.608Z"
                    },
                    {
                      "id": "c596128a-3df3-4757-964c-5ef49b1cf901",
                      "imageNumber": 3,
                      "imageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSGs9lNdAXuQYLyOgPw4MX5H5cX_Zznojuk0A&s",
                      "createdAt": "2024-08-30T14:27:46.585Z"
                    },
                    {
                      "id": "cac55012-27f4-4c9e-9dff-ac83a1a47dda",
                      "imageNumber": 4,
                      "imageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRA5q2ViNEFGB_dS12n3KOPtF9DER1_Pl7fSg&s",
                      "createdAt": "2024-08-30T14:27:46.571Z"
                    },
                    {
                      "id": "03570069-d4b9-494c-b93d-2d06ae0a2eb6",
                      "imageNumber": 5,
                      "imageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSifX6eHJ1PWVHz-VqUDZT7nqd_G8LpU3LRVQ&s",
                      "createdAt": "2024-08-30T14:27:46.612Z"
                    },
                    {
                      "id": "f9f00da9-bf73-4776-9e1c-267b6da02092",
                      "imageNumber": 6,
                      "imageUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRUnZUu7Er_S7hjt2gG89PTE5HTkjcpaGf64g&s",
                      "createdAt": "2024-08-30T14:27:46.589Z"
                    }
                  ],
                  "comments": [
                    {
                      "content": "otimo veiculo",
                      "id": "3130dcc1-a621-4a86-99ef-a3f84f68be02",
                      "createdAt": "2024-08-30T14:28:40.336Z",
                      "updatedAt": "2024-08-30T14:28:40.336Z",
                      "user": {
                        "name": "João da Silva",
                        "description": "Vendedor de carros com 10 anos de experiência.",
                        "id": "0ce8a2ac-858e-40f9-89ef-0e800b5ca189",
                        "createdAt": "2024-08-30T14:28:24.940Z",
                        "updatedAt": "2024-08-30T14:28:24.940Z"
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified vehicle ID does not exist.",
            "content": {
              "application/json": {
                "examples": {
                  "vehicle_not_found": {
                    "value": {
                      "message": "Vehicle not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid UUID",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid UUID"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/sellers": {
      "post": {
        "tags": ["Sellers"],
        "summary": "Create vehicle",
        "description": "This route is responsible for creating a new vehicle. The \"brand\", \"model\", \"year\", \"fuel\", \"mileage\", \"color\", \"price\", and \"coverImage\" fields are required, while the \"description\" field is optional. Additionally, an optional array of images can be provided, with a maximum of 6 images. The \"color\" field must be one of the following values: \"Branco\", \"Preto\", \"Cinza\", \"Prata\", \"Vermelho\", \"Azul\", \"Verde\", \"Amarelo\", \"Laranja\", \"Roxo\", \"Marrom\". Any additional fields sent will be ignored.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vehicle_create"
              },
              "example": {
                "brand": "chevrolet",
                "model": "bolt ev premier 203cv (elétrico)",
                "year": "2022",
                "fuel": 3,
                "mileage": 400000,
                "color": "branco",
                "description": "carro",
                "price": 250000,
                "coverImage": "https://quatrorodas.abril.com.br/wp-content/uploads/2020/12/chevrolet-2021-onix-premier-8389-e1607978189472.jpg?quality=70&strip=info",
                "images": ["image1", "image12"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK - Vehicle creation successfully completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vehicle_return_with_images"
                },
                "example": {
                  "id": "622a29cf-c09e-4e2c-b240-dc94628adef1",
                  "brand": "chevrolet",
                  "model": "bolt ev premier 203cv (elétrico)",
                  "year": "2022",
                  "fuel": 3,
                  "mileage": 400000,
                  "color": "branco",
                  "fipePrice": 282045,
                  "price": 550000,
                  "isGoodBuy": false,
                  "isActive": true,
                  "description": "carro",
                  "coverImage": "https://quatrorodas.abril.com.br/wp-content/uploads/2020/12/chevrolet-2021-onix-premier-8389-e1607978189472.jpg?quality=70&strip=info",
                  "images": [
                    {
                      "id": "84992ae8-c107-4a27-afff-3dc5a28ff80a",
                      "imageNumber": 1,
                      "imageUrl": "image1",
                      "createdAt": "2023-06-29T21:39:09.960Z"
                    },
                    {
                      "id": "a3b8672d-ef9e-45de-b6c6-53c4544edca5",
                      "imageNumber": 2,
                      "imageUrl": "image12",
                      "createdAt": "2023-06-29T21:39:10.037Z"
                    }
                  ],
                  "createdAt": "2023-06-29T21:39:09.926Z",
                  "updatedAt": "2023-06-29T21:39:09.926Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No authorization token provided, the provided token has expired, or the token is invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_bearer_token": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "jwt_expired": {
                    "value": {
                      "message": "jwt expired"
                    }
                  },
                  "invalid_token": {
                    "value": {
                      "message": "JWT Invalid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You don't have permissions to perform this action",
            "content": {
              "application/json": {
                "examples": {
                  "user_is_not_seller": {
                    "value": {
                      "message": "User is not a seller"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some required fields were not sent or are in an invalid format. Please ensure all mandatory fields are provided correctly.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_keys_required": {
                    "value": {
                      "message": {
                        "brand": ["Required"],
                        "model": ["Required"],
                        "year": ["Required"],
                        "fuel": ["Required"],
                        "mileage": ["Required"],
                        "color": ["Required"],
                        "price": ["Required"],
                        "coverImage": ["Required"]
                      }
                    }
                  },
                  "bad_request_invalid_car": {
                    "value": {
                      "message": "The specified car model is not available in the internal car database."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Sellers"],
        "summary": "Retrieve user vehicles",
        "description": "This route is responsible for retrieving a user's vehicles based on their token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1,
              "maximum": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vehicle_return_pagination"
                },
                "example": {
                  "count": 2,
                  "totalPages": 1,
                  "previousPage": null,
                  "nextPage": null,
                  "data": [
                    {
                      "brand": "chevrolet",
                      "model": "bolt ev premier 203cv (elétrico)",
                      "year": "2022",
                      "fuel": 3,
                      "mileage": 400,
                      "color": "white",
                      "price": 300000,
                      "description": "carro",
                      "coverImage": "imagem cover",
                      "id": "2f7785ec-76c3-483e-9876-eb7de227527f",
                      "fipePrice": 282045,
                      "isGoodBuy": false,
                      "isActive": true,
                      "createdAt": "2023-09-11T18:46:53.232Z",
                      "updatedAt": "2023-09-11T18:46:53.232Z"
                    },
                    {
                      "brand": "chevrolet",
                      "model": "bolt ev premier 203cv (elétrico)",
                      "year": "2022",
                      "fuel": 3,
                      "mileage": 400,
                      "color": "white",
                      "price": 300000,
                      "description": "carro",
                      "coverImage": "imagem cover",
                      "id": "11ec0832-92ca-4b9a-81df-d7f19b7997fa",
                      "fipePrice": 282045,
                      "isGoodBuy": false,
                      "isActive": true,
                      "createdAt": "2023-09-11T19:00:37.328Z",
                      "updatedAt": "2023-09-11T19:00:37.328Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No authorization token provided, the provided token has expired, or the token is invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_bearer_token": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "jwt_expired": {
                    "value": {
                      "message": "jwt expired"
                    }
                  },
                  "invalid_token": {
                    "value": {
                      "message": "JWT Invalid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You don't have permissions to perform this action",
            "content": {
              "application/json": {
                "examples": {
                  "user_is_not_seller": {
                    "value": {
                      "message": "User is not a seller"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/sellers/{vehicleId}": {
      "patch": {
        "tags": ["Sellers"],
        "summary": "Update vehicle data",
        "description": "This route is responsible for updating a vehicle. The \"brand\", \"model\", \"year\", \"fuel\", \"mileage\", \"color\", \"price\", and \"coverImage\" fields are required, while the \"description\" field is optional. Additionally, an optional array of images can be provided, with a maximum of 6 images. Any additional fields sent will be ignored.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vehicleId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "ID of the vehicle to update"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vehicle_update"
              },
              "example": {
                "brand": "chevrolet",
                "model": "bolt ev premier 203cv (elétrico)",
                "year": "2022",
                "fuel": 3,
                "mileage": 400000,
                "color": "branco",
                "description": "editado",
                "price": 250000,
                "coverImage": "https://quatrorodas.abril.com.br/wp-content/uploads/2020/12/chevrolet-2021-onix-premier-8389-e1607978189472.jpg?quality=70&strip=info",
                "images": ["image1", "image12"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vehicle_return_with_images"
                },
                "example": {
                  "brand": "chevrolet",
                  "model": "bolt ev premier 203cv (elétrico)",
                  "year": "2022",
                  "fuel": 3,
                  "mileage": 400000,
                  "color": "branco",
                  "price": 250000,
                  "description": "editado",
                  "coverImage": "https://quatrorodas.abril.com.br/wp-content/uploads/2020/12/chevrolet-2021-onix-premier-8389-e1607978189472.jpg?quality=70&strip=info",
                  "id": "5e6f1b06-4597-4922-9813-493f9f6d0a56",
                  "fipePrice": 282045,
                  "isGoodBuy": true,
                  "isActive": true,
                  "createdAt": "2023-09-21T18:50:28.939Z",
                  "updatedAt": "2023-09-21T19:22:50.275Z",
                  "images": [
                    {
                      "id": "8c2823aa-d731-451a-920e-47def5243ae2",
                      "imageNumber": 1,
                      "imageUrl": "image1",
                      "createdAt": "2023-09-21T19:22:50.308Z"
                    },
                    {
                      "id": "70bada3c-a3a3-462a-9446-940583dfaa86",
                      "imageNumber": 2,
                      "imageUrl": "image12",
                      "createdAt": "2023-09-21T19:22:50.368Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No authorization token provided, the provided token has expired, or the token is invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_bearer_token": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "jwt_expired": {
                    "value": {
                      "message": "JWT expired"
                    }
                  },
                  "invalid_token": {
                    "value": {
                      "message": "JWT Invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified vehicle ID does not exist.",
            "content": {
              "application/json": {
                "examples": {
                  "vehicle_not_found": {
                    "value": {
                      "message": "Vehicle not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You don't have permissions to perform this action",
            "content": {
              "application/json": {
                "examples": {
                  "user_is_not_seller": {
                    "value": {
                      "message": "User is not a seller"
                    }
                  },
                  "user_is_not_vehicle_owner": {
                    "value": {
                      "message": "You are not the owner of this vehicle"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some required fields were not sent or are in an invalid format. Please ensure all mandatory fields are provided correctly.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_keys_required": {
                    "value": {
                      "message": {
                        "brand": ["Required"],
                        "model": ["Required"],
                        "year": ["Required"],
                        "fuel": ["Required"],
                        "mileage": ["Required"],
                        "color": ["Required"],
                        "price": ["Required"],
                        "description": ["Required"],
                        "coverImage": ["Required"]
                      }
                    }
                  },
                  "bad_request_invalid_car": {
                    "value": {
                      "message": "The specified car model is not available in the internal car database"
                    }
                  },
                  "bad_request_invalid_uuid": {
                    "value": {
                      "message": "Invalid UUID"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Sellers"],
        "summary": "Delete vehicle data",
        "description": "This route is responsible for deleting a vehicle based on its ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vehicleId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "ID of the vehicle to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Vehicle successfully deleted"
          },
          "401": {
            "description": "Unauthorized - No authorization token provided, the provided token has expired, or the token is invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_bearer_token": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "jwt_expired": {
                    "value": {
                      "message": "JWT expired"
                    }
                  },
                  "invalid_token": {
                    "value": {
                      "message": "JWT Invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified vehicle ID does not exist.",
            "content": {
              "application/json": {
                "examples": {
                  "vehicle_not_found": {
                    "value": {
                      "message": "Vehicle not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You don't have permissions to perform this action",
            "content": {
              "application/json": {
                "examples": {
                  "user_is_not_seller": {
                    "value": {
                      "message": "User is not a seller"
                    }
                  },
                  "user_is_not_vehicle_owner": {
                    "value": {
                      "message": "You are not the owner of this vehicle"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some required fields were not sent or are in an invalid format. Please ensure all mandatory fields are provided correctly.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_invalid_uuid": {
                    "value": {
                      "message": "Invalid UUID"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/comments/{vehicleId}": {
      "post": {
        "tags": ["Comments"],
        "summary": "Create a comment",
        "description": "This route is responsible for creating a comment. The \"content\" field is required. Any additional fields sent will be ignored.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vehicleId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "ID of the vehicle"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/comment_create"
              },
              "example": {
                "content": "Ótimo Veículo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/comment_return"
                },
                "example": {
                  "content": "Ótimo Veículo",
                  "id": "cdfe487f-e3b4-4c2f-ab23-a48932192fb1",
                  "createdAt": "2023-09-11T20:59:37.253Z",
                  "updatedAt": "2023-09-11T20:59:37.253Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No authorization token provided, the provided token has expired, or the token is invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_bearer_token": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "jwt_expired": {
                    "value": {
                      "message": "JWT expired"
                    }
                  },
                  "invalid_token": {
                    "value": {
                      "message": "JWT Invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified vehicle ID does not exist.",
            "content": {
              "application/json": {
                "examples": {
                  "vehicle_not_found": {
                    "value": {
                      "message": "Vehicle not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You don't have permissions to perform this action",
            "content": {
              "application/json": {
                "examples": {
                  "user_is_vehicle_owner": {
                    "value": {
                      "message": "You cannot comment on your own vehicle"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some required fields were not sent or are in an invalid format. Please ensure all mandatory fields are provided correctly.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_keys_required": {
                    "value": {
                      "message": {
                        "content": ["Required"]
                      }
                    }
                  },
                  "bad_request_invalid_uuid": {
                    "value": {
                      "message": "Invalid UUID"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentId}": {
      "patch": {
        "tags": ["Comments"],
        "summary": "Update a comment",
        "description": "This route is responsible for updating a comment. The \"content\" field is required. Any additional fields sent will be ignored.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "ID of the comment"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/comment_create"
              },
              "example": {
                "content": "Ótimo Veículo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/comment_return"
                },
                "example": {
                  "content": "Ótimo Veículo",
                  "id": "cdfe487f-e3b4-4c2f-ab23-a48932192fb1",
                  "createdAt": "2023-09-11T20:59:37.253Z",
                  "updatedAt": "2023-09-11T20:59:37.253Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No authorization token provided, the provided token has expired, or the token is invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_bearer_token": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "jwt_expired": {
                    "value": {
                      "message": "JWT expired"
                    }
                  },
                  "invalid_token": {
                    "value": {
                      "message": "JWT Invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified comment ID does not exist.",
            "content": {
              "application/json": {
                "examples": {
                  "comment_not_found": {
                    "value": {
                      "message": "Comment not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You don't have permissions to perform this action",
            "content": {
              "application/json": {
                "examples": {
                  "user_is_not_comment_owner": {
                    "value": {
                      "message": "You are not the owner of this comment"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some required fields were not sent or are in an invalid format. Please ensure all mandatory fields are provided correctly.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_keys_required": {
                    "value": {
                      "message": {
                        "content": ["Required"]
                      }
                    }
                  },
                  "bad_request_invalid_uuid": {
                    "value": {
                      "message": "Invalid UUID"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Comments"],
        "summary": "Delete a comment",
        "description": "This route is responsible for deleting a comment based on its ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "ID of the comment"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Comment successfully deleted"
          },
          "401": {
            "description": "Unauthorized - No authorization token provided, the provided token has expired, or the token is invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_bearer_token": {
                    "value": {
                      "message": "Missing bearer token"
                    }
                  },
                  "jwt_expired": {
                    "value": {
                      "message": "JWT expired"
                    }
                  },
                  "invalid_token": {
                    "value": {
                      "message": "JWT Invalid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some required fields were not sent or are in an invalid format. Please ensure all mandatory fields are provided correctly.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_invalid_uuid": {
                    "value": {
                      "message": "Invalid UUID"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified comment ID does not exist.",
            "content": {
              "application/json": {
                "examples": {
                  "comment_not_found": {
                    "value": {
                      "message": "Comment not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You don't have permissions to perform this action",
            "content": {
              "application/json": {
                "examples": {
                  "user_is_not_comment_owner": {
                    "value": {
                      "message": "You don`t have permissions to perform this action"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Login"],
        "summary": "Login",
        "description": "This route is responsible for logging in a registered user. The \"email\" and \"password\" fields are mandatory, and any additional fields sent will be ignored. Upon successful login, an access token called \"token\" will be returned, which should be included in requests to routes that require authorization.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              },
              "example": {
                "email": "joao@mail.com",
                "password": "12345aA!"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5ldG9pZnBlMkBnbWFpbC5jb20iLCJhZG1pbiI6dHJ1ZSwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTY4MjA5MjY4MywiZXhwIjoxNjgyMDk0NDgzLCJzdWIiOiIyIn0.y4xXMb7pFSZ77_Q3jv9IPS_njk-i3XcoYPZwumfjGrU"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Some required fields were not sent or are in an invalid format. Please ensure all mandatory fields are provided correctly.",
            "content": {
              "application/json": {
                "example": {
                  "message": {
                    "email": ["required"],
                    "password": ["required"]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The email or password is wrong.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid credentials"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "user_create": {
        "required": [
          "name",
          "email",
          "password",
          "cpf",
          "phone",
          "birthdate",
          "address"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "maxLength": 100
          },
          "password": {
            "type": "string",
            "maxLength": 100
          },
          "cpf": {
            "type": "string",
            "maxLength": 11
          },
          "phone": {
            "type": "string",
            "maxLength": 11
          },
          "birthdate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "isSeller": {
            "type": "boolean",
            "default": true
          },
          "address": {
            "required": ["cep", "state", "city", "street", "number"],
            "type": "object",
            "properties": {
              "cep": {
                "type": "string",
                "maxLength": 8
              },
              "state": {
                "type": "string",
                "maxLength": 2
              },
              "city": {
                "type": "string",
                "maxLength": 50
              },
              "street": {
                "type": "string",
                "maxLength": 50
              },
              "number": {
                "type": "string",
                "maxLength": 10
              },
              "complement": {
                "type": "string",
                "maxLength": 50
              }
            }
          }
        }
      },
      "user_update": {
        "required": ["name", "email", "cpf", "phone", "birthdate"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "maxLength": 100
          },
          "cpf": {
            "type": "string",
            "maxLength": 11
          },
          "phone": {
            "type": "string",
            "maxLength": 11
          },
          "birthdate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "user_update_address": {
        "required": ["cep", "state", "city", "street", "number"],
        "type": "object",
        "properties": {
          "cep": {
            "type": "string",
            "maxLength": 8
          },
          "state": {
            "type": "string",
            "maxLength": 2
          },
          "city": {
            "type": "string",
            "maxLength": 50
          },
          "street": {
            "type": "string",
            "maxLength": 50
          },
          "number": {
            "type": "string",
            "maxLength": 10
          },
          "complement": {
            "type": "string",
            "maxLength": 50
          }
        }
      },
      "user_return_with_address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "maxLength": 100
          },
          "cpf": {
            "type": "string",
            "maxLength": 11
          },
          "phone": {
            "type": "string",
            "maxLength": 11
          },
          "birthdate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "isSeller": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "cep": {
                "type": "string",
                "maxLength": 8
              },
              "state": {
                "type": "string",
                "maxLength": 2
              },
              "city": {
                "type": "string",
                "maxLength": 50
              },
              "street": {
                "type": "string",
                "maxLength": 50
              },
              "number": {
                "type": "string",
                "maxLength": 10
              },
              "complement": {
                "type": "string",
                "maxLength": 50
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "user_return": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "maxLength": 100
          },
          "cpf": {
            "type": "string",
            "maxLength": 11
          },
          "phone": {
            "type": "string",
            "maxLength": 11
          },
          "birthdate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "isSeller": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "user_return_address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "cep": {
            "type": "string",
            "maxLength": 8
          },
          "state": {
            "type": "string",
            "maxLength": 2
          },
          "city": {
            "type": "string",
            "maxLength": 50
          },
          "street": {
            "type": "string",
            "maxLength": 50
          },
          "number": {
            "type": "string",
            "maxLength": 10
          },
          "complement": {
            "type": "string",
            "maxLength": 50
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "vehicle_create": {
        "required": [
          "brand",
          "model",
          "year",
          "fuel",
          "mileage",
          "color",
          "price",
          "coverImage"
        ],
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "maxLength": 50
          },
          "model": {
            "type": "string",
            "maxLength": 50
          },
          "year": {
            "type": "string",
            "maxLength": 4
          },
          "fuel": {
            "type": "number"
          },
          "mileage": {
            "type": "number"
          },
          "color": {
            "type": "string",
            "maxLength": 30
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "coverImage": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "vehicle_update": {
        "required": [
          "brand",
          "model",
          "year",
          "fuel",
          "mileage",
          "color",
          "price",
          "coverImage"
        ],
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "maxLength": 50
          },
          "model": {
            "type": "string",
            "maxLength": 50
          },
          "year": {
            "type": "string",
            "maxLength": 4
          },
          "fuel": {
            "type": "number"
          },
          "mileage": {
            "type": "number"
          },
          "color": {
            "type": "string",
            "maxLength": 30
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "coverImage": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean",
            "default": "true"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "vehicle_return_pagination": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "previousPage": {
            "type": "string",
            "format": "uri"
          },
          "nextPage": {
            "type": "string",
            "format": "uri"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "brand": {
                  "type": "string",
                  "maxLength": 50
                },
                "model": {
                  "type": "string",
                  "maxLength": 50
                },
                "year": {
                  "type": "string",
                  "maxLength": 4
                },
                "fuel": {
                  "type": "number"
                },
                "mileage": {
                  "type": "number"
                },
                "color": {
                  "type": "string",
                  "maxLength": 30
                },
                "description": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "coverImage": {
                  "type": "string"
                },
                "isActive": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "vehicle_return_pagination_with_user": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "previousPage": {
            "type": "string",
            "format": "uri"
          },
          "nextPage": {
            "type": "string",
            "format": "uri"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "brand": {
                  "type": "string",
                  "maxLength": 50
                },
                "model": {
                  "type": "string",
                  "maxLength": 50
                },
                "year": {
                  "type": "string",
                  "maxLength": 4
                },
                "fuel": {
                  "type": "number"
                },
                "mileage": {
                  "type": "number"
                },
                "color": {
                  "type": "string",
                  "maxLength": 30
                },
                "description": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "coverImage": {
                  "type": "string"
                },
                "isActive": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 100
                    },

                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "vehicle_return_pagination_with_one_user": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "previousPage": {
            "type": "string",
            "format": "uri"
          },
          "nextPage": {
            "type": "string",
            "format": "uri"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "vehicles": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "brand": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "model": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "year": {
                      "type": "string",
                      "maxLength": 4
                    },
                    "fuel": {
                      "type": "number"
                    },
                    "mileage": {
                      "type": "number"
                    },
                    "color": {
                      "type": "string",
                      "maxLength": 30
                    },
                    "description": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "coverImage": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "vehicle_return_with_images": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "brand": {
                "type": "string",
                "maxLength": 50
              },
              "model": {
                "type": "string",
                "maxLength": 50
              },
              "year": {
                "type": "string",
                "maxLength": 4
              },
              "fuel": {
                "type": "number"
              },
              "mileage": {
                "type": "number"
              },
              "color": {
                "type": "string",
                "maxLength": 30
              },
              "description": {
                "type": "string"
              },
              "price": {
                "type": "number"
              },
              "coverImage": {
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "imageNumber": {
                      "type": "integer"
                    },
                    "imageUrl": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "vehicle_return_with_user_and_images_and_comments": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "brand": {
            "type": "string",
            "maxLength": 50
          },
          "model": {
            "type": "string",
            "maxLength": 50
          },
          "year": {
            "type": "string",
            "maxLength": 4
          },
          "fuel": {
            "type": "number"
          },
          "mileage": {
            "type": "number"
          },
          "color": {
            "type": "string",
            "maxLength": 30
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "coverImage": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "imageNumber": {
                  "type": "integer"
                },
                "imageUrl": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "maxLength": 100
              },

              "description": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "phone": {
                "type": "string",
                "maxLength": 11
              }
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 100
                    },

                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "comment_create": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        }
      },
      "comment_return": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "login": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
